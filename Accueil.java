/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Accueil.java
 *
 */
package pfefinal;


import java.awt.event.ActionEvent;
import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import static pfefinal.Fenetre.tab;

/**
 *
 * @author Nes_Yam
 */
public class Accueil extends javax.swing.JFrame {
  //  public static Object[][] Ob;

   
    // End of variables declaration
    
    
    
    /** Creates new form Accueil */
    public Accueil() {
        initComponents();
       //Init();
      // setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NbCr = new javax.swing.JLabel();
        NbAc = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MatricePer = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        Cout = new javax.swing.JTable();
        Executer = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Nombre d'Actions :");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Nombre de Critères :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NbAc, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NbCr, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NbAc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(NbCr, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Matrice de Performances", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 1, 12))); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        MatricePer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        MatricePer.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                MatricePerPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(MatricePer);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollPane4.setBackground(new java.awt.Color(204, 204, 255));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(120, 200));

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Table des Couts :", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        jScrollPane5.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jScrollPane5ComponentAdded(evt);
            }
        });

        Cout.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Critère", "Poids", "Critère Usuel", "Quasi-Critère", "Lineaire", "A Palliers", "Linaire avec indiffference"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(Cout);

        jScrollPane4.setViewportView(jScrollPane5);
        jScrollPane5.getAccessibleContext().setAccessibleName("Seuils");

        Executer.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Executer.setText("Executer");
        Executer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecuterActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton1.setText("Annuler");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(Executer))
                .addGap(111, 111, 111))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(Executer, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     
    public void Init(){
        
        jPanel1 = new javax.swing.JPanel();
       // Ok = new javax.swing.JButton();
        NbAc = new javax.swing.JLabel();
        NbCr = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MatricePer = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        //Ok.setFont(new java.awt.Font("Palatino Linotype", 0, 11)); // NOI18N
        //Ok.setText("OK");
        /*Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });*/

        NbAc.setFont(new java.awt.Font("Palatino Linotype", 0, 11)); // NOI18N

        NbCr.setFont(new java.awt.Font("Palatino Linotype", 0, 11)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 0, 11)); // NOI18N
        jLabel1.setText("Nbre Actions");

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 0, 11)); // NOI18N
        jLabel2.setText("Nbre Critères");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(NbAc, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(NbCr, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        ))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NbAc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NbCr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(11, 11, 11)
                //.addComponent(Ok)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Matrice de Performances", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 1, 12))); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        MatricePer.setAutoCreateColumnsFromModel(false);
       // jTable1.setVisible(false);
        MatricePer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(MatricePer);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        pack();
        
    }
    
    String[]st= new String[1000];
    private void ExecuterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuterActionPerformed
try{       String ft[];
        String tp;
        float x=0;
//        float c=Float.parseFloat(jTextField3.getText());
//      float d=Float.parseFloat(jTextField4.getText());
           Fenetre m = new Fenetre(); //HADII
        int a=MatricePer.getRowCount();
        int b=MatricePer.getColumnCount();
        float[] p= new float[b];
        String fr;
        float[] q= new float[b];
        float[] pf= new float[b];
        float[] fln= new float[a];
         Object [][] dif = new Object[a][a+1];
           Object [][] diff = new Object[a][a+1];//ICI
           Object [][] diff1 = new Object[a][4]; //ICI
          Object [][] PP = new Object[a][2]; //ICI
        String R [] =  {"Le Rangement","Actions"};
             float[][] mat = new  float[100][100];
             float[][] cj =new float [a][a];
             float[][] sc =new float [a][a];
             float [][] fl = new float [a][2];
             String[]str=new String[a+1];
             str[0]="actions";
             for (int i=1;i<=a;i++ ){
                 str[i]=(String) MatricePer.getValueAt(i-1, 0);
                 System.out.print("\n");
                 System.out.print(str[i]);
                 System.out.print("\n");
             }
             for(int i=0;i<b-1;i++)
             {
             x=x+Float.parseFloat(Cout.getValueAt(i,1).toString());
             //la liste des poids
             p[i]=Float.parseFloat(Cout.getValueAt(i,1).toString());     
           }
             System.out.println("la somme des poids est  " + x);
             m.jTextField1.setText(""+x);//ICI
            
             //if(x!=1){System.out.println("la somme des couts doit etre egale a 1");}
         for(int i=0;i<a;i++) {
            System.out.print("\n");
             for(int j=1;j<b;j++) {
            tp=MatricePer.getValueAt(i,j).toString();
           mat[i][j-1]=Float.parseFloat(tp); 
           System.out.print(mat[i][j-1]+" |");
            }
             
         }
        float[][][] dm = new float[a][a][b];    //difference entre les actions pr chaq critere
        float[][][] hp = new float[a][a][b];    // le resultat de l'application d'un des crétaires P(d)
         for(int k=0;k<b-1;k++){
             for(int i=0;i<a;i++){
                 for(int j=0;j<a;j++){
                  dm[i][j][k]= mat[i][k]-mat[j][k] ; 
                  
                  System.out.println("dm ="+dm[i][j][k]+"|"+i+"|"+j+"|"+k);
                  System.out.println("\n");
                      System.out.println(mat[i][k]+"||"+mat[j][k]);
                  
                  
                 }   
             }
         }
        System.out.println("le résultat "+ dm[0][1][0]);

        for(int n=0;n<b-1;n++){
             JLabel lab=new JLabel();
             JLabel l=new JLabel();
      System.out.println(Cout.getRowCount());
      System.out.println(Cout.getColumnCount());
     // System.out.println(Cout.getValueAt(n, 2));
         if((boolean)Cout.getValueAt(n,2)==true)
      {   fr="Critère usuel";
          for(int i=0;i<a;i++){
                   for(int j=0;j<a;j++){
                    //for(int k=0;k<b-1;k++){
                         System.out.println("dm 2 :"+dm[i][j][n]+"|"+i+"|"+j+"|"+n);
                    if(dm[i][j][n]>0){ 
                             
                           hp[i][j][n]=1;}
                         else hp[i][j][n]=0; 
                                       
                    // }
                      
                                        }
             for(int e=0;e<a;e++){
         for(int j=0;j<a;j++){
          //for(int k=0;k<b-1;k++){
             dif[e][0]=(String) MatricePer.getValueAt(e, 0);
             
             dif[e][j+1]=hp[e][j][n];
               dif[j][j+1]=1;//ICI
        System.out.print(cj[e][j]+" ");                 
         }
       System.out.print("\n");    
     }
             
      } l.setText("Critère : "+Cout.getValueAt(n, 0)); 
          lab.setText("Type : "+fr);
           }     else if((boolean)Cout.getValueAt(n, 3)==true)         
                                     /// break; 
     // case 2: 
          
      {    fr="Quasi-Critère ";
          float Q = Float.parseFloat(JOptionPane.showInputDialog(this, "Critère : "+Cout.getValueAt(n, 0)+ " | Donner Q seuil d'indifférence "));  
          for(int i=0;i<a;i++){
                   for(int j=0;j<a;j++){
                     // for(int k=0;k<b-1;k++){
                        
                         if(Float.valueOf(dm[i][j][n])>Q){   
                           hp[i][j][n]=1;}
                         else hp[i][j][n]=0; 
                  
                                               
                                        }
                          for(int e=0;e<a;e++){
         for(int j=0;j<a;j++){
         // for(int k=0;k<b-1;k++){
             dif[e][0]=(String) MatricePer.getValueAt(e, 0);
             
             dif[e][j+1]=hp[e][j][n];
               dif[j][j+1]=1;
          //}//ICI
        System.out.print(cj[e][j]+" ");                 
         }
       System.out.print("\n");    
     }
       l.setText("Critère : "+Cout.getValueAt(n, 0));                     
      lab.setText("Type : "+fr);  
                                     } //break; 
      }else if((boolean)Cout.getValueAt(n, 4)==true)
     // case 3: 
      {    fr="Linéaire ";
          float pF = Float.parseFloat(JOptionPane.showInputDialog(this, "Critère : "+Cout.getValueAt(n, 0)+ " |  Donner P seuil de préférence "));  
          for(int i=0;i<a;i++){
                   for(int j=0;j<a;j++){
                      //for(int k=0;k<b-1;k++){
                         if(((int)dm[i][j][n])>pF){   
                           hp[i][j][n]=1;}
                         else if(((int)dm[i][j][n])<=0){   
                           hp[i][j][n]=0;}
                         else hp[i][j][n]=Float.valueOf(dm[i][j][n])/pF; 
                  
                                           // }   
                                        }
                          for(int e=0;e<a;e++){
         for(int j=0;j<a;j++){
          //for(int k=0;k<b-1;k++){
             dif[e][0]=(String) MatricePer.getValueAt(e, 0);
             
             dif[e][j+1]=hp[e][j][n];
               dif[j][j+1]=1;
          //}//ICI
        System.out.print(cj[e][j]+" ");                 
         }
       System.out.print("\n");    
     } l.setText("Critère : "+Cout.getValueAt(n, 0)); 
      lab.setText("Type : "+fr);  
                                     } //break; 
      }else if((boolean)Cout.getValueAt(n, 5)==true)
     // case 4 :
      {    fr="A Paliers ";
          float Q1 = Float.parseFloat(JOptionPane.showInputDialog(this,"Critère : "+Cout.getValueAt(n, 0)+ " |  Donner Q seuil d'indifférence  "));
            float pF1 = Float.parseFloat(JOptionPane.showInputDialog(this, "Critère : "+Cout.getValueAt(n, 0)+ " | Donner P seuil de préférence "));  
          for(int i=0;i<a;i++){
                   for(int j=0;j<a;j++){
                     // for(int k=0;k<b-1;k++){
                         if(Float.valueOf(dm[i][j][n])>pF1){   
                           hp[i][j][n]=1;}
                         else if(Float.valueOf(dm[i][j][n])<=Q1){
                           hp[i][j][n]=0;  
                         } else hp[i][j][n]=(float) 0.5;
                  
                                           // }   
                                        }
                          for(int e=0;e<a;e++){
         for(int j=0;j<a;j++){
          //for(int k=0;k<b-1;k++){
             dif[e][0]=(String) MatricePer.getValueAt(e, 0);
             
             dif[e][j+1]=hp[e][j][n];
               dif[j][j+1]=1;
          //}//ICI
        System.out.print(cj[e][j]+" ");                 
         }
       System.out.print("\n");    
     } l.setText("Critère : "+Cout.getValueAt(n, 0)); 
      lab.setText("Type : "+fr);  
                                     } //break;  
//      case 5: 
      }else if((boolean)Cout.getValueAt(n,6))
      {   fr="Linéaire avec indifference";
          float Q2 = Float.parseFloat(JOptionPane.showInputDialog(this,"Critère : "+Cout.getValueAt(n, 0)+ " | Donner Q seuil d'indifférence  "));
            float pF2 = Float.parseFloat(JOptionPane.showInputDialog(this, "Critère : "+Cout.getValueAt(n, 0)+ " | Donner P seuil de préférence  "));  
          
          for(int i=0;i<a;i++){
                   for(int j=0;j<a;j++){
                    //  for(int k=0;k<b-1;k++){
                         if(Float.valueOf(dm[i][j][n])>pF2){   
                           hp[i][j][n]=1;}
                         else if((Float.valueOf(dm[i][j][n])-q[n])<=Q2){
                           hp[i][j][n]=0;  
                         } else hp[i][j][n]=(Float.valueOf(dm[i][j][n])-q[n])/(pF2-Q2);
                  
                                           // }   
                                        }
                          for(int e=0;e<a;e++){
         for(int j=0;j<a;j++){
          //for(int k=0;k<b-1;k++){
             dif[e][0]=(String) MatricePer.getValueAt(e, 0);
             
             dif[e][j+1]=hp[e][j][n];
               dif[j][j+1]=1;
          //}//ICI
        System.out.print(cj[e][j]+" ");                 
         }
       System.out.print("\n");    
     }
       l.setText("Critère : "+Cout.getValueAt(n, 0)); 
         // JLabel lab=new JLabel();
       lab.setText("Type : "+fr);                            } //break; 
  
       }
       // JLabel lab=new JLabel();
       //lab.setText("Type : "+fr);
       Object fif2[][]=new Object[a+1][a+1];
       for(int i=0;i<a+1;i++)
           fif2[0][i]=str[i];
       for(int i=1;i<a+1;i++){
           for(int h=0;h<a+1;h++){
               fif2[i][h]=dif[i-1][h];
           }
       }
       JLabel lo=new JLabel();
       lo.setText(" ");
       JTable tab=new JTable();
       tab.setModel(new DefaultTableModel(fif2,str));
       m.getpanel().add(lo);
       m.getpanel().add(l);
       m.getpanel().add(lab);
       m.getpanel().add(tab);
        
               
    
        }
         x=0;
     System.out.println("\n La matrice de surclassement");
     for(int i=0;i<a;i++){
         for(int j=0;j<a;j++){
             for(int k=0;k<b-1;k++){
                 x=x+hp[i][j][k]*p[k];
                //  sc[i][j]=x;
             }
            sc[i][j]=x;
             
             x=0;
         }
     }
        
     for(int i=0;i<a;i++){
         for(int j=0;j<a;j++){
             diff[i][0]=(String) MatricePer.getValueAt(i, 0);
             
             diff[i][j+1]=sc[i][j];
               diff[j][j+1]=1;//ICI
        System.out.print(sc[i][j]+" ");                 
         }
       System.out.print("\n");    
     }
        
     float y=0;
     x=0;
     System.out.println("La matrice de flut");
     for(int i=0;i<a;i++){
          for(int j=0;j<a;j++){
              x=x+sc[i][j];
              y=y+sc[j][i];
                 }
          fl[i][0]=x/(a-1);
          fl[i][1]=y/(a-1);
          x=0;y=0;
     }
           
     String [] head1 ={"les Actions","Flux + ","Flux-","Flux Net"};//  String [] head1 ={"les action","Flux Net"};
     for(int i=0;i<a;i++){    //ICI
       diff1[i][0]=MatricePer.getValueAt(i, 0);
// diff1[i][0]=Ob[i][0];//ICI
         diff1[i][1]=fl[i][0];//SUP
         diff1[i][2]=fl[i][1];//SUP
         System.out.println(fl[i][0]+"  "+fl[i][1]);//SUP
     }
     
     for(int i=0;i<a;i++){   
         fln[i]=fl[i][0]-fl[i][1];
     }
     String srt[]=new String[a];
     for(int i=0;i<a;i++)
         srt[i]=(String) MatricePer.getValueAt(i, 0);
  System.out.println("Vecteur de flut net ");  
   for(int i=0;i<a;i++){
         System.out.println(fln[i]);
         diff1[i][3]=fln[i];//ICI
     }
     x=fln[0];
     //int [] v=new int[a];
     for(int i=0;i<a;i++){
         x=fln[i];
         String x1=srt[i];
         for(int j=i;j<a;j++){
             if(fln[j]>=x){
                 x1=srt[j];
                 srt[j]=srt[i];
                 srt[i]=x1;
                // v[i]=j;
                 x=fln[j];
                 fln[j]=fln[i];
                 fln[i]=x;
             }
         }
         
     }//ICI
     System.out.println(" rangement des action ");
     for(int i=0;i<a;i++){
         
        /* PP[i][0]= (st[v[i]]);
         System.out.println(st[v[i]]);*/
        PP[i][0]=i+1;
        PP[i][1]=srt[i];
         System.out.println(fln[i]);
     }
     
       m.Surc.setModel(new javax.swing.table.DefaultTableModel(diff,str));//ici w li ta7tha 
       m.jTable2.setModel(new javax.swing.table.DefaultTableModel(diff1,head1));//flut
      //m.gettab().setModel(new javax.swing.table.DefaultTableModel(dif,str));
        m.tab.setModel(new javax.swing.table.DefaultTableModel(PP,R));
       m.setVisible(true);//ici
}catch(NumberFormatException ex){
    JOptionPane.showMessageDialog(rootPane, "Veillez entrez les informations ou Type d'information entree incorrect");
}  
    }//GEN-LAST:event_ExecuterActionPerformed
int choix;public JTable getmatriceper(){
    return MatricePer;
}
public JTable getcout(){
    return Cout;
}
public JLabel getnbact(){
    return NbAc;
}
public JLabel getnbacr(){
    return NbCr;
}
    private void jScrollPane5ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jScrollPane5ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane5ComponentAdded

    private void MatricePerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_MatricePerPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_MatricePerPropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Accueil().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Cout;
    private javax.swing.JButton Executer;
    private javax.swing.JTable MatricePer;
    private javax.swing.JLabel NbAc;
    private javax.swing.JLabel NbCr;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables

     
     }
     
     
